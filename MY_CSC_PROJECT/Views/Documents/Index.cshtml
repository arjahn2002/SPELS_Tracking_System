@model MY_CSC_PROJECT.ViewModels.DocumentVM
@inject IHttpContextAccessor httpContextAccessor

@{
    var superAdmin = httpContextAccessor.HttpContext.Session.GetString("SuperAdmin");
    if (superAdmin != null)
    {
        Layout = "_AdminLayout";
        ViewData["Title"] = "Receiving Stage";
    }
    else
    {
        Layout = "_Layout";
        ViewData["Title"] = "Receiving Stage";
    }
}

<div class="d-flex align-items-center mt-3 mb-3">
    <h4 class="me-auto">Receiving Stage</h4>
    <!-- Button trigger modal -->
    @if (ViewBag.CanExport != null && (bool)ViewBag.CanExport)
    {
        <button type="button" class="btn btn-warning text-white open-export-modal" data-bs-toggle="modal" data-bs-target="#ExportExcelModal">
            Export excel
        </button>
    }
    else
    {
        <button type="button" class="btn btn-warning text-white" hidden>
            Export excel
        </button>
    }

    @if (ViewBag.CanAdd != null && (bool)ViewBag.CanAdd)
    {
        <button type="button" class="btn btn-primary ms-2 open-create-modal" data-bs-toggle="modal" data-bs-target="#CreateDocsModal">
            Add new
        </button>
    }
    else
    {
        <button type="button" class="btn btn-primary" hidden>
            Add new
        </button>
    }
</div>

<table class="table table-striped" id="TableIndex">
    <thead>
        <tr>
            <th>
                Full name
            </th>
            <th>
                Special eligibility
            </th>
            <th>
                Status
            </th>
            <th>
                Remarks
            </th>
            <th>
                Date received
            </th>
            <th>
                Date approved
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Documents)
            {
            <tr>
                <td>
                    @if (item.Suffix == "N/A" || item.Suffix == "N.A" || item.Suffix == "NA" || item.Suffix == "n/a")
                    {

                        @($"{item.Firstname} {item.Middlename} {item.Lastname}")
                    }
                    else
                    {
                        @($"{item.Firstname} {item.Middlename} {item.Lastname} {item.Suffix}")
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SpecialEligibility.SpecialEligibilityName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Remarks)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateReceived)
                </td>
                <td>
                    @{
                        var latestReleasing = item.ReleasingStages?.OrderByDescending(r => r.DateApproved).FirstOrDefault();
                        if (latestReleasing != null)
                        {
                            @latestReleasing.DateApproved.ToString("M/d/yyyy")
                        }
                    }
                </td>
                <td>
                    <div class="d-flex gap-1">
                        @if (ViewBag.CanEdit != null && (bool)ViewBag.CanEdit)
                        {
                            <a class="btn btn-success btn-sm open-edit-modal" onclick="EditForm(@item.DocumentID)">Edit</a> @: |
                        }
                        else
                        {
                            <a class="btn btn-danger btn-sm" hidden>Edit</a>
                        }

                        <a class="btn btn-info text-white btn-sm" onclick="DetailsForm(@item.DocumentID)">Details</a> 
                        @if (ViewBag.CanRemove != null && (bool)ViewBag.CanRemove)
                        {
                            @: | <a class="btn btn-danger btn-sm" onclick="ConfirmForm(@item.DocumentID)">Delete</a>
                        }
                        else
                        {
                            <a class="btn btn-danger btn-sm"hidden>Delete</a>
                        }
                    </div>
                </td>
            </tr>
    }
    </tbody>
</table>

<div class="toast-container position-fixed bottom-0 end-0 p-3"></div>

<!-- Add new documents using modal-->

<partial name="_CreateModal"></partial>

<!-- Edit document using partial view -->
<partial name="_EditModal"></partial>

<!-- Pop up the Details modal -->
<partial name="_DetailsModal"></partial>

<!-- Delete Docs -->
<partial name="_DeleteModal"></partial>

<partial name="_ExportExcelModal"></partial>

@section Scripts {
    <script>

        var EditForm = function (id) {
            $.ajax({
                type: "GET",
                url: "/Documents/GetDocs",
                data: { getID: id },
                success: function (document) {
                    $("#EditDocsModal").modal("show");

                    $(".editID").val(document.documentid);
                    $("#EditDateReceived").val(document.datereceived);
                    $("#EditDateEntered").val(document.dateentered);
                    $("#EditSubmissionType").val(document.submission);
                    $("#EditOtherFOS").val(document.otherfosid);
                    $("#EditLastname").val(document.lastname);
                    $("#EditFirstname").val(document.firstname);
                    $("#EditMiddlename").val(document.middlename);
                    $("#EditSuffix").val(document.suffix);
                    $("#EditGender").val(document.gender);
                    $("#EditDOB").val(document.dateofbirth);
                    $("#EditPOB").val(document.placeofbirth);
                    $("#EditSE").val(document.specialeligibilityid);
                    $("#EditSchool").val(document.school);
                    $("#EditAddress").val(document.address);
                    $("#EditProvince").val(document.provinceid);
                    $("#EditPosition").val(document.positionid);
                    $("#EditTypeofEligibility").val(document.toe);
                    $("#EditOtherTOE").val(document.othertoe);
                    $("#EditStatus").val(document.status);
                    $("#EditRemarks").val(document.remarks);
                }
            });
        }

        var DetailsForm = function (id) {
            $.ajax({
                type: "GET",
                url: "/Documents/GetDocs",
                data: { getID: id },
                success: function (document) {
                    $("#DetailsModal").modal("show");

                    $("#DetailsDateReceived").val(document.datereceived);
                    $("#DetailsDateEntered").val(document.dateentered);
                    $("#DetailsSubmissionType").val(document.submission);
                    $("#DetailsOtherFOS").val(document.otherfosid);
                    $("#DetailsLastname").val(document.lastname);
                    $("#DetailsFirstname").val(document.firstname);
                    $("#DetailsMiddlename").val(document.middlename);
                    $("#DetailsSuffix").val(document.suffix);
                    $("#DetailsGender").val(document.gender);
                    $("#DetailsDOB").val(document.dateofbirth);
                    $("#DetailsPOB").val(document.placeofbirth);
                    $("#DetailsSE").val(document.specialeligibilityid);
                    $("#DetailsSchool").val(document.school);
                    $("#DetailsAddress").val(document.address);
                    $("#DetailsProvince").val(document.provinceid);
                    $("#DetailsPosition").val(document.positionid);
                    $("#DetailsTOE").val(document.toe);
                    $("#DetailsOtherTOE").val(document.othertoe);
                    $("#DetailsStatus").val(document.status);
                    $("#DetailsRemarks").val(document.remarks);
                }
            });
        }

        var ConfirmForm = function (id) {
            $("#DocsID").val(id);
            $("#DeleteModal").modal("show");
        };

        let addModal = document.getElementById('CreateDocsModal');
        let editModal = document.getElementById("EditDocsModal");
        let detailsModal = document.getElementById('DetailsModal');
        let form = document.querySelector("form");

        let addSubmissionType = document.getElementById('AddSubmissionType');
        let addSE = document.getElementById('AddSE');
        let detailsSubmissionType = document.getElementById('DetailsSubmissionType');
        let detailsSE = document.getElementById('DetailsSE');

        // Add sections
        let addFOSection = document.getElementById('AddFOSection');
        let addRemarksSection = document.getElementById('AddRemarksSection');
        let addSchoolSection = document.getElementById('AddSchoolSection');
        let addAddressSection = document.getElementById('AddAddressSection');
        let addProvinceSection = document.getElementById('AddProvinceSection');
        let addPositionSection = document.getElementById('AddPositionSection');
        let addToESection = document.getElementById('AddToESection');
        let addOtherToESection = document.getElementById('AddOtherToESection');

        // Edit sections
        let editSubmissionType = document.getElementById("EditSubmissionType");
        let editSE = document.getElementById("EditSE");

        let editSchoolSection = document.getElementById("EditSchoolSection");
        let editAddressSection = document.getElementById("EditAddressSection");
        let editProvinceSection = document.getElementById("EditProvinceSection");
        let editPositionSection = document.getElementById("EditPositionSection");
        let editToESection = document.getElementById("EditToESection");
        let editOtherToESection = document.getElementById("EditOtherToESection");
        let editAddress = document.getElementById("EditAddress");
        let editProvince = document.getElementById("EditProvince");
        let editPosition = document.getElementById("EditPosition");
        let editTypeofEligibility = document.getElementById("EditTypeofEligibility");
        let editSchool = document.getElementById("EditSchool");
        let editOtherToE = document.getElementById("EditOtherToE");

        // Details sections
        let detailsOtherFOsSection = document.getElementById('DetailsOtherFOsSection');
        let detailsSchoolSection = document.getElementById('DetailsSchoolSection');
        let detailsAddressSection = document.getElementById('DetailsAddressSection');
        let detailsProvinceSection = document.getElementById('DetailsProvinceSection');
        let detailsPositionSection = document.getElementById('DetailsPositionSection');
        let detailsToESection = document.getElementById('DetailsToESection');
        let detailsOtherToESection = document.getElementById('DetailsOtherToESection');

        // It will enable or disable the other select list
        function AddSubmissionForm() {
            if (!addSubmissionType) return;

            let addSelectedValue = addSubmissionType.value;
            let addSelectedText = addSubmissionType.options[addSubmissionType.selectedIndex]?.text || "";

            // Show/Hide "Other FO's" dropdown
            if (addSelectedValue === '1' || addSelectedText === "Walk-in") {


                AddOtherFOS.selectedIndex = 1;
                AddRemarks.value = "N/A";
            }

            if (addSelectedValue === '2' || addSelectedText === "Other FO's") {
                addFOSection.style.display = 'block';

                AddOtherFOS.selectedIndex = 0;
                AddRemarks.value = "N/A";
            } else {
                addFOSection.style.display = 'none';
            }

            if (addSelectedValue === '3' || addSelectedText === "Other Region") {
                addRemarksSection.style.display = 'block';

                AddOtherFOS.selectedIndex = 1;
                AddRemarks.value = "";
            } else {
                addRemarksSection.style.display = 'none';
            }
        }

        function AddSEForm() {
            if (!addSE) return;

            let addSEValue = addSE.value;
            let addSEText = addSE.options[addSE.selectedIndex]?.text || "";

            if (addSEValue === '1') {
                addSchoolSection.style.display = 'block';

                AddSchool.value = "";
                AddAddress.value = "N/A";
                AddProvince.selectedIndex = 1;
                AddPosition.selectedIndex = 1;
                AddTypeofEligibility.value = "N/A";
                AddOtherToE.value = "N/A";
            } else {
                addSchoolSection.style.display = 'none';
            }
            if (addSEValue === '2') {
                addAddressSection.style.display = 'block';
                addProvinceSection.style.display = 'block';
                addPositionSection.style.display = 'block';

                AddSchool.value = "N/A";
                AddAddress.value = "";
                AddProvince.selectedIndex = 0;
                AddPosition.selectedIndex = 0;
                AddTypeofEligibility.value = "N/A";
                AddOtherToE.value = "N/A";
            } else {
                addAddressSection.style.display = 'none';
                addProvinceSection.style.display = 'none';
                addPositionSection.style.display = 'none';
            }
            if (addSEValue === '3') {
                addToESection.style.display = 'block';

                AddSchool.value = "N/A";
                AddAddress.value = "N/A";
                AddProvince.selectedIndex = 1;
                AddPosition.selectedIndex = 1;
                AddTypeofEligibility.value = "";
                AddOtherToE.value = "N/A";
            } else {
                addToESection.style.display = 'none';
            }
            if (addSEValue === '4') {
                addOtherToESection.style.display = 'block';

                AddSchool.value = "N/A";
                AddAddress.value = "N/A";
                AddProvince.selectedIndex = 1;
                AddPosition.selectedIndex = 1;
                AddTypeofEligibility.value = "N/A";
                AddOtherToE.value = "";
            } else {
                addOtherToESection.style.display = 'none';
            }
        }

        function EditSubmissionForm() {
            
            if (!editSubmissionType || !editSE) return;

            let editSubmissionValue = editSubmissionType.value;
            let editSubmissionText = editSubmissionType.options[editSubmissionType.selectedIndex]?.text || "";

            let editSEValue = editSE.value;
            let editSEText = editSE.options[editSE.selectedIndex]?.text || "";

            let editFOSection = document.getElementById("EditFOSection");
            let editRemarksSection = document.getElementById("EditRemarksSection");
            let editOtherFOS = document.getElementById("EditOtherFOS");
            let editRemarks = document.getElementById("EditRemarks");

            if (!editFOSection || !editRemarksSection || !editOtherFOS || !editRemarks) return;

            switch (editSubmissionValue) {
                case "1":
                    editFOSection.style.display = "none";
                    editRemarksSection.style.display = "none";
                    editOtherFOS.selectedIndex = 1;
                    editRemarks.value = "N/A";
                    break;
                case "2":
                    editFOSection.style.display = "block";
                    editRemarksSection.style.display = "none";
                    editRemarks.value = "N/A";
                    break;
                case "3":
                    editFOSection.style.display = "none";
                    editRemarksSection.style.display = "block";
                    editOtherFOS.selectedIndex = 1;
                    break;
            }

            if (!editSchoolSection || !editAddressSection || !editProvinceSection || !editPositionSection ||
                !editToESection || !editOtherToESection || !editAddress || !editProvince || !editPosition ||
                !editTypeofEligibility || !editSchool || !editOtherToE) return;

            switch (editSEValue) {
                case "1":
                    editSchoolSection.style.display = "block";
                    editAddressSection.style.display = "none";
                    editProvinceSection.style.display = "none";
                    editPositionSection.style.display = "none";
                    editToESection.style.display = "none";
                    editOtherToESection.style.display = "none";

                    editAddress.value = "N/A";
                    editProvince.selectedIndex = 1;
                    editPosition.selectedIndex = 1;
                    editTypeofEligibility.value = "N/A";
                    editOtherToE.value = "N/A";
                    break;
                case "2":
                    editSchoolSection.style.display = "none";
                    editAddressSection.style.display = "block";
                    editProvinceSection.style.display = "block";
                    editPositionSection.style.display = "block";
                    editToESection.style.display = "none";
                    editOtherToESection.style.display = "none";

                    editSchool.value = "N/A";
                    editTypeofEligibility.value = "N/A";
                    editOtherToE.value = "N/A";
                    break;
                case "3":
                    editSchoolSection.style.display = "none";
                    editAddressSection.style.display = "none";
                    editProvinceSection.style.display = "none";
                    editPositionSection.style.display = "none";
                    editToESection.style.display = "block";
                    editOtherToESection.style.display = "none";

                    editAddress.value = "N/A";
                    editProvince.selectedIndex = 1;
                    editPosition.selectedIndex = 1;
                    editSchool.value = "N/A";
                    editOtherToE.value = "N/A";
                    break;
                case "4":
                    editSchoolSection.style.display = "none";
                    editAddressSection.style.display = "none";
                    editProvinceSection.style.display = "none";
                    editPositionSection.style.display = "none";
                    editToESection.style.display = "none";
                    editOtherToESection.style.display = "block";

                    editAddress.value = "N/A";
                    editProvince.selectedIndex = 1;
                    editPosition.selectedIndex = 1;
                    editTypeofEligibility.value = "N/A";
                    editSchool.value = "N/A";
                    break;
            }
        }

        function updateModalValues() {

            if (detailsSubmissionType.value === "1") {
                detailsOtherFOsSection.style.display = 'none';
            }

            if (detailsSubmissionType.value === "2") {
                detailsOtherFOsSection.style.display = 'block';
            }

            if (detailsSubmissionType.value === "3") {
                detailsOtherFOsSection.style.display = 'none';
            }

            switch (detailsSE.value) {
                case "1":
                    detailsSchoolSection.style.display = 'block';
                    detailsAddressSection.style.display = 'none';
                    detailsProvinceSection.style.display = 'none';
                    detailsPositionSection.style.display = 'none';
                    detailsToESection.style.display = 'none';
                    detailsOtherToESection.style.display = 'none';
                    break;
                case "2":
                    detailsSchoolSection.style.display = 'none';
                    detailsAddressSection.style.display = 'block';
                    detailsProvinceSection.style.display = 'block';
                    detailsPositionSection.style.display = 'block';
                    detailsToESection.style.display = 'none';
                    detailsOtherToESection.style.display = 'none';
                    break;
                case "3":
                    detailsSchoolSection.style.display = 'none';
                    detailsAddressSection.style.display = 'none';
                    detailsProvinceSection.style.display = 'none';
                    detailsPositionSection.style.display = 'none';
                    detailsToESection.style.display = 'block';
                    detailsOtherToESection.style.display = 'none';
                    break;
                case "4":
                    detailsSchoolSection.style.display = 'none';
                    detailsAddressSection.style.display = 'none';
                    detailsProvinceSection.style.display = 'none';
                    detailsPositionSection.style.display = 'none';
                    detailsToESection.style.display = 'none';
                    detailsOtherToESection.style.display = 'block';
                    break;
            }
        }

        


        function showToast(message, type) {
            var toastContainer = $(".toast-container");
            var toastHTML = `<div class="toast align-items-center text-bg-${type} border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
                                <div class="d-flex">
                                    <div class="toast-body">
                                        ${message}
                                    </div>
                                    <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                                </div>
                             </div>`;

            toastContainer.append(toastHTML);
            var toastElement = toastContainer.find(".toast").last();
            var toast = new bootstrap.Toast(toastElement[0]);
            toast.show();

            // Automatically remove toast after it disappears
            toastElement.on("hidden.bs.toast", function () {
                $(this).remove();
            });
        }

        $(document).ready(function () {
            $(".open-create-modal").click(function () {
                $("#CreateDocsModal").modal("show");
            });

            $(".open-export-modal").click(function () {
                $("#ExportExcelModal").modal("show");
            });

            $("#btnDelete").click(function () {
                var idDelete = $("#DocsID").val();

                $.ajax({
                    type: "POST",
                    url: "/Documents/Delete",
                    data: { intDelete: idDelete },
                    success: function (result) {
                        if (result) {
                            $("#DocsID").val(null);
                            window.location.href = "/Documents/Index";
                        } else {
                            alert("Oishi! Something went wrong.");
                        }
                    }
                });
            });

            addModal.addEventListener('shown.bs.modal', function () {
                addSchoolSection.style.display = 'none';
                addAddressSection.style.display = 'none';
                addProvinceSection.style.display = 'none';
                addPositionSection.style.display = 'none';
                addToESection.style.display = 'none';
                addOtherToESection.style.display = 'none';
            });

            addModal.addEventListener('hidden.bs.modal', function () {

                AddSubmissionType.selectedIndex = 0;
                AddOtherFOS.selectedIndex = 0;
                AddRemarks.value = "";
                AddSE.selectedIndex = 0;
                AddSchool.value = "";
                AddAddress.value = "";
                AddProvince.selectedIndex = 0;
                AddPosition.selectedIndex = 0;
                AddTypeofEligibility.value = "";
                AddOtherToE.value = "";

                addFOSection.style.display = 'none';
                addRemarksSection.style.display = 'none';
                addSchoolSection.style.display = 'none';
                addAddressSection.style.display = 'none';
                addProvinceSection.style.display = 'none';
                addPositionSection.style.display = 'none';
                addToESection.style.display = 'none';
                addOtherToESection.style.display = 'none';

                form.reset();
                form.classList.remove("was-validated");

                let submissionValidationMsg = form.querySelector(".text-danger-submission");
                let lastnameValidationMsg = form.querySelector(".text-danger-lastname");
                let firstnameValidationMsg = form.querySelector(".text-danger-firstname");
                let middlenameValidationMsg = form.querySelector(".text-danger-middlename");
                let genderValidationMsg = form.querySelector(".text-danger-gender");
                let dobValidationMsg = form.querySelector(".text-danger-dob");
                let pobValidationMsg = form.querySelector(".text-danger-pob");
                let seValidationMsg = form.querySelector(".text-danger-se");
                let schoolValidationMsg = form.querySelector(".text-danger-school");
                let addressValidationMsg = form.querySelector(".text-danger-address");
                let provinceValidationMsg = form.querySelector(".text-danger-province");
                let toeValidationMsg = form.querySelector(".text-danger-toe");
                let othertoeValidationMsg = form.querySelector(".text-danger-othertoe");

                if (submissionValidationMsg && lastnameValidationMsg && firstnameValidationMsg && middlenameValidationMsg &&
                    genderValidationMsg && dobValidationMsg && pobValidationMsg && seValidationMsg && schoolValidationMsg &&
                    addressValidationMsg && provinceValidationMsg && toeValidationMsg && othertoeValidationMsg) {
                    submissionValidationMsg.textContent = "";
                    lastnameValidationMsg.textContent = "";
                    firstnameValidationMsg.textContent = "";
                    middlenameValidationMsg.textContent = "";
                    genderValidationMsg.textContent = "";
                    dobValidationMsg.textContent = "";
                    pobValidationMsg.textContent = "";
                    seValidationMsg.textContent = "";
                    schoolValidationMsg.textContent = "";
                    addressValidationMsg.textContent = "";
                    provinceValidationMsg.textContent = "";
                    toeValidationMsg.textContent = "";
                    othertoeValidationMsg.textContent = "";
                }
            });

            if (addSubmissionType) {
                AddSubmissionForm();
                addSubmissionType.addEventListener('change', AddSubmissionForm);
            }

            if (addSE) {
                AddSEForm();
                addSE.addEventListener('change', AddSEForm);
            }

            editModal.addEventListener("shown.bs.modal", function () {
                EditSubmissionForm();
            });

            if (editSubmissionType) {
                editSubmissionType.addEventListener("change", EditSubmissionForm);
            }

            if (editSE) {
                editSE.addEventListener("change", EditSubmissionForm);
            }

            detailsModal.addEventListener("shown.bs.modal", function () {
                updateModalValues();
            });
        });
    </script>

    <script>
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}