@model SPELS_TRACKING_SYSTEM.ViewModels.UserVM

@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "User Management";
}

<div class="d-flex align-items-center mt-3 mb-3">
    <h4 class="me-auto">User Management </h4>
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#AddUserModal">
        Add new
    </button>

</div>

<table class="table table-striped" id="TableIndex">
    <thead>
        <tr>
            <th>
                Fullname
            </th>
            <th>
                Username
            </th>
            <th>
                Password
            </th>
            <th>
                Role
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Users) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Fullname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role.RoleName)
            </td>
            <td>
                    <a class="btn btn-success btn-sm open-edit-modal" onclick="EditForm(@item.UserID)">Edit</a> |
                    <a class="btn btn-danger btn-sm" onclick="ConfirmForm(@item.UserID)">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<partial name="_RegisterModal"></partial>

<!-- Edit User Account -->
<form asp-action="Edit" id="EditFormModal" method="post" class="needs-validation" novalidate>
    <div class="modal fade" id="EditModal" tabindex="-1" aria-labelledby="sampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">

                <div class="modal-header">
                    <h1 class="modal-title fs-5 text-primary" id="sampleDocsModalLabel">Edit User Account</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input class="editID" asp-for="User.UserID" hidden />

                    <div class="form-floating mb-3">
                        <input type="text" asp-for="User.Fullname" class="form-control" id="EditFullname" required />
                        <label>Fullname</label>
                        <span asp-validation-for="User.Fullname" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="text" asp-for="User.Username" class="form-control" id="EditUsername" required />
                        <label>Username</label>
                        <span asp-validation-for="User.Username" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="text" asp-for="User.Password" class="form-control" id="EditPassword" required />
                        <label>Password</label>
                        <span asp-validation-for="User.Password" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <select asp-for="User.RoleID" class="form-select" id="EditUserRole" asp-items="ViewBag.RoleID" required>
                            <option value="" selected>-- Select User Role --</option>
                        </select>
                        <label><span class="text-danger fw-bold">*</span> Submission type</label>
                        <span asp-validation-for="User.RoleID" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary btn-save d-flex">
                        <div class="loading-spinner d-none me-2">
                            <div class="spinner-border spinner-border-sm" role="status"></div>
                        </div>
                        Save changes
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>

<!-- Delete User Account -->
<form asp-action="Delete" method="post">
    <div class="modal fade" id="DeleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5 text-danger" id="exampleModalLabel">Delete User Account</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input id="UserID" name="UserID" hidden />
                    <h5>Are you sure to delete this account?</h5>
                </div>
                <div class="modal-footer">
                    <button id="btnDelete" type="button" class="btn btn-danger">Confirm</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>

        let addModal = document.getElementById('AddUserModal');
        let form = document.querySelector("form");

        var EditForm = function (id) {
            $.ajax({
                type: "GET",
                url: "/Users/GetUser",
                data: { getID: id },
                success: function (user) {
                    $("#EditModal").modal("show");
                    $(".editID").val(user.userid);
                    $("#EditFullname").val(user.fullname);
                    $("#EditUsername").val(user.username);
                    $("#EditPassword").val(user.password);
                    $("#EditUserRole").val(user.roleid);
                }
            });
        }

        var ConfirmForm = function (id) {
            $("#UserID").val(id);
            $("#DeleteModal").modal("show");
        };

        $(document).ready(function () {

            addModal.addEventListener('hidden.bs.modal', function () {
                form.reset();
                form.classList.remove("was-validated");

                let validation = form.querySelectorAll("span.text-danger");
                validation.forEach(function (text) {
                    text.textContent = "";
                });
            });

            $("#btnDelete").click(function () {
                var idDelete = $("#UserID").val();

                $.ajax({
                    type: "POST",
                    url: "/Users/Delete",
                    data: { intDelete: idDelete },
                    success: function (result) {
                        if (result) {
                            $("#UserID").val(null);
                            window.location.href = "/Users/Index";
                        } else {
                            alert("Oishi! Something went wrong.");
                        }
                    }
                });
            });
        });
    </script>
    <script>
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}